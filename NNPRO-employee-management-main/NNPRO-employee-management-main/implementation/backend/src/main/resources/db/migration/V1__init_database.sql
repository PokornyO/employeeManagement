CREATE TABLE app_user
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name   VARCHAR(255),
    surname      VARCHAR(255),
    phone_number VARCHAR(255),
    username     VARCHAR(255),
    password     VARCHAR(255),
    email        VARCHAR(255),
    role_id      BIGINT,
    CONSTRAINT pk_appuser PRIMARY KEY (id)
);

CREATE TABLE attendance
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_time       TIMESTAMP WITHOUT TIME ZONE,
    end_time         TIMESTAMP WITHOUT TIME ZONE,
    work_description VARCHAR(255),
    task_id          BIGINT                                  NOT NULL,
    user_id          BIGINT                                  NOT NULL,
    CONSTRAINT pk_attendance PRIMARY KEY (id)
);

CREATE TABLE comment
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text         VARCHAR(255),
    created_date TIMESTAMP WITHOUT TIME ZONE,
    task_id      BIGINT                                  NOT NULL,
    user_id      BIGINT                                  NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id)
);

CREATE TABLE performance_report
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    review_date    TIMESTAMP WITHOUT TIME ZONE,
    overall_rating DOUBLE PRECISION,
    feedback       VARCHAR(255),
    user_id        BIGINT                                  NOT NULL,
    task_id        BIGINT                                  NOT NULL,
    CONSTRAINT pk_performancereport PRIMARY KEY (id)
);

CREATE TABLE project
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(255),
    description   VARCHAR(255),
    creation_date TIMESTAMP WITHOUT TIME ZONE,
    due_date      TIMESTAMP WITHOUT TIME ZONE,
    finish_date   TIMESTAMP WITHOUT TIME ZONE,
    status        VARCHAR(255),
    user_id       BIGINT,
    CONSTRAINT pk_project PRIMARY KEY (id)
);

CREATE TABLE role
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_role PRIMARY KEY (id)
);

CREATE TABLE task
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title         VARCHAR(255),
    description   VARCHAR(255),
    creation_date TIMESTAMP WITHOUT TIME ZONE,
    due_date      TIMESTAMP WITHOUT TIME ZONE,
    expected_finish_date      TIMESTAMP WITHOUT TIME ZONE,
    finish_date   TIMESTAMP WITHOUT TIME ZONE,
    difficulty    VARCHAR(255),
    status        VARCHAR(255),
    project_id    BIGINT                                  NOT NULL,
    CONSTRAINT pk_task PRIMARY KEY (id)
);

CREATE TABLE user_project
(
    project_id BIGINT NOT NULL,
    user_id    BIGINT NOT NULL
);

CREATE TABLE user_task
(
    task_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL
);

ALTER TABLE app_user
    ADD CONSTRAINT FK_APPUSER_ON_ROLE FOREIGN KEY (role_id) REFERENCES role (id);

ALTER TABLE attendance
    ADD CONSTRAINT FK_ATTENDANCE_ON_TASK FOREIGN KEY (task_id) REFERENCES task (id);

ALTER TABLE attendance
    ADD CONSTRAINT FK_ATTENDANCE_ON_USER FOREIGN KEY (user_id) REFERENCES app_user (id);

ALTER TABLE comment
    ADD CONSTRAINT FK_COMMENT_ON_TASK FOREIGN KEY (task_id) REFERENCES task (id);

ALTER TABLE comment
    ADD CONSTRAINT FK_COMMENT_ON_USER FOREIGN KEY (user_id) REFERENCES app_user (id);

ALTER TABLE performance_report
    ADD CONSTRAINT FK_PERFORMANCEREPORT_ON_TASK FOREIGN KEY (task_id) REFERENCES task (id);

ALTER TABLE performance_report
    ADD CONSTRAINT FK_PERFORMANCEREPORT_ON_USER FOREIGN KEY (user_id) REFERENCES app_user (id);

ALTER TABLE project
    ADD CONSTRAINT FK_PROJECT_ON_USER FOREIGN KEY (user_id) REFERENCES app_user (id);

ALTER TABLE task
    ADD CONSTRAINT FK_TASK_ON_PROJECT FOREIGN KEY (project_id) REFERENCES project (id);

ALTER TABLE user_project
    ADD CONSTRAINT fk_usepro_on_app_user FOREIGN KEY (user_id) REFERENCES app_user (id);

ALTER TABLE user_project
    ADD CONSTRAINT fk_usepro_on_project FOREIGN KEY (project_id) REFERENCES project (id);

ALTER TABLE user_task
    ADD CONSTRAINT fk_user_task_on_app_user FOREIGN KEY (user_id) REFERENCES app_user (id);

ALTER TABLE user_task
    ADD CONSTRAINT fk_user_task_on_task FOREIGN KEY (task_id) REFERENCES task (id);